*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ЎЎATENCION!! - ЎЎNO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="form1.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Optiongroup1" UniqueID="" Timestamp="" />

	Caption = "Загрузка справочника БИК"
	DoCreate = .T.
	FontSize = 9
	Height = 221
	Icon = ..\logo3.ico
	Left = 2
	Name = "FORM1"
	ShowTips = .T.
	Top = 0
	Width = 366
	WindowState = 2

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Caption = "...", ;
		FontSize = 16, ;
		Height = 37, ;
		Left = 120, ;
		Name = "Command1", ;
		Top = 0, ;
		Width = 35
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command2' AS commandbutton WITH ;
		Caption = "Импорт", ;
		FontBold = .T., ;
		FontSize = 11, ;
		Height = 37, ;
		Left = 204, ;
		Name = "Command2", ;
		Top = 0, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Optiongroup1' AS optiongroup WITH ;
		AutoSize = .T., ;
		ButtonCount = 3, ;
		Height = 69, ;
		Left = 36, ;
		Name = "Optiongroup1", ;
		Top = 72, ;
		Value = 1, ;
		Width = 292, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Загрузка с сайта cbr.ru", ;
		Option1.FontSize = 11, ;
		Option1.Height = 19, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 175, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Загрузка XML из локальной папки Data", ;
		Option2.FontSize = 11, ;
		Option2.Height = 19, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 282, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Открытие ранее сохраненных DBF", ;
		Option3.FontSize = 11, ;
		Option3.Height = 19, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Top = 45, ;
		Option3.Width = 258
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'Text1' AS textbox WITH ;
		FontSize = 12, ;
		Height = 35, ;
		Left = 0, ;
		Name = "Text1", ;
		Top = 1, ;
		Width = 124
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Init
		With This
			.Text1.Value = Date()
		*ssa*		.Width = Sysmetric(1)
		
			.Command2.ForeColor = Iif(IsFileExists(.Text1.Value), Rgb(0,128,0), Rgb(255,128,0))
		
			.Optiongroup1.Value = Val(MyValue3)
		
		*ON KEY LABEL ESC ThisForm.Release
		Endwith
		
	ENDPROC

	PROCEDURE QueryUnload
		Nodefault
		
	ENDPROC

	PROCEDURE Command1.Click
		Do SetDat With Thisform.Text1
		
	ENDPROC

	PROCEDURE Command1.Valid
		With Thisform
			.Command2.ForeColor = Iif(IsFileExists(.Text1.Value), Rgb(0,128,0), Rgb(255,128,0))
		Endwith
		
	ENDPROC

	PROCEDURE Command2.Click
		With Thisform
		  If .Text1.Value < Date(2019, 1, 3) && Ctod('03.01.2019') && версия УФЭБС:  2019_1_0
		    MyValue5="ed:ED807"
		    MyValue6="ed:ED807/ed:BICDirectoryEntry"
		    MyValue7="ed:ED807/ed:BICDirectoryEntry/ed:Accounts"
		  Endif
		  If .Text1.Value = Date(2019, 1, 3) && Ctod('03.01.2019') && версия УФЭБС: недокументированная. xml - файл с ошибкой
		* В xml-файле нужно удалить в самом начале строку: <?xml version="1.0" encoding="WINDOWS-1251"?> и сохранить.
		    MyValue5="env:Envelope/env:Body/ED807"
		    MyValue6="env:Envelope/env:Body/ED807/BICDirectoryEntry"
		    MyValue7="env:Envelope/env:Body/ED807/BICDirectoryEntry/Accounts"
		  Endif
		  If .Text1.Value > Date(2019, 1, 3) && Ctod('03.01.2019') && версия УФЭБС:  2019.1.1
		    MyValue5="ED807"
		    MyValue6="ED807/BICDirectoryEntry"
		    MyValue7="ED807/BICDirectoryEntry/Accounts"
		  Endif
		
		  .Command2.Caption = 'Минутку...'
		*ssa*	cXMLFile =pathdata+Substr(Dtoc(Thisform.Text1.Value),7,4)+Substr(Dtoc(Thisform.Text1.Value),4,2)+Substr(Dtoc(Thisform.Text1.Value),1,2)+'_ED807_full.xml'
		*ssa*	cXMLFile2=pathdata+Substr(Dtoc(Thisform.Text1.Value),7,4)+Substr(Dtoc(Thisform.Text1.Value),4,2)+Substr(Dtoc(Thisform.Text1.Value),1,2)+'_807_full.xml'
		  cXMLFile =pathdata+Dtos(.Text1.Value)+'_ED807_full.xml'
		  cXMLFile2=pathdata+Dtos(.Text1.Value)+'_807_full.xml'
		
		  If .Optiongroup1.Value = 1  && - загрузка с сайта ЦБ
		
		    If !IsInternetConnected()
		      Messagebox('Компьютер не подключен к интернету!', 48, 'Загрузка СПРАВОЧНИКА БИК с сайта WWW.CBR.RU')
		      .Command2.Caption = 'Импорт'
		      Return .F.
		    Endif
		
		*ssa*		uSource88 = MyValue+Substr(Dtoc(Thisform.Text1.Value),7,4)+Substr(Dtoc(Thisform.Text1.Value),4,2)+Substr(Dtoc(Thisform.Text1.Value),1,2)+'ED01OSBR.zip'
		    uSource88 = MyValue+Dtos(.Text1.Value)+'ED01OSBR.zip'
		*ssa*		uTaget88  = pathcur+'ZIP\'+Substr(Dtoc(Thisform.Text1.Value),7,4)+Substr(Dtoc(Thisform.Text1.Value),4,2)+Substr(Dtoc(Thisform.Text1.Value),1,2)+'ED01OSBR.zip'
		    uTaget88  = path_zip+Dtos(.Text1.Value)+'ED01OSBR.zip'
		
		    If IsFileDownloaded(uSource88, uTaget88) Or File(uTaget88)
		
		      Wait "Закачка файла успешно завершена! Идёт разархивация файла..." Window Nowait
		
		*ssa*					a = unzopen(uTaget88)
		*ssa*					Do While .T.
		*ssa*					n_FileInZip = UnZipFile(a, pathdata)
		*ssa*					If unzGoToNextFile(a)<>0
		*ssa*						Exit
		*ssa*					Endif
		*ssa*				Enddo
		*ssa*				unzclose(a)
		
		      o = Createobject("shell.application")
		      For Each oFile In o.NameSpace(uTaget88).items
		        o.NameSpace(pathdata).copyhere(oFile)
		      Endfor
		
		      If !File(pathdata+n_FileInZip)
		        Messagebox('Ошибка разархивации zip-архива справочника! '+uTaget88, 48, 'Загрузка СПРАВОЧНИКА БИК')
		        .Command2.Caption = 'Импорт'
		        Return .F.
		      Else
		        Wait "XML-файл успешно разархивирован!" Window Nowait
		      Endif
		
		    Else
		      Wait "Файл архива справочника не скачан!" Window Nowait
		    Endif
		
		  Endif  && ThisForm.Optiongroup1.Value = 1 - загрузка с сайта ЦБ
		
		  If Inlist(.Optiongroup1.Value, 1, 2)  && загрузка XML из локальной папки Data
		
		    If (!File(cXMLFile)) And (!File(cXMLFile2))
		      Messagebox('XML-файл справочника не найден! '+Chr(13)+cXMLFile+' или '+Chr(13)+cXMLFile2, 48, 'Загрузка СПРАВОЧНИКА БИК')
		      .Command2.Caption = 'Импорт'
		      .Optiongroup1.Value = 1
		      Return .F.
		    Endif
		
		    loXML = Createobject("MSXML2.DOMDocument")
		
		    If loXML.parseError.errorCode <> 0
		      Messagebox('Ошибка структуры XML-файла', 48, 'Загрузка СПРАВОЧНИКА БИК')
		      .Command2.Caption = 'Импорт'
		      Release loXML
		      Return .F.
		    Endif
		
		    If Not loXML.Load(Iif(File(cXMLFile), cXMLFile, cXMLFile2))
		      Messagebox('Не подгружен xml-файл  : '+Chr(13)+cXMLFile+' или '+Chr(13)+cXMLFile2+' Завершение работы...',0+48,'Внимание',2000)
		      .Command2.Caption = 'Импорт'
		      Release loXML
		      Return .F.
		    Endif
		
		    .Command2.Enabled = .F.
		    With loXML
		*-------------------------------------------------------------------------------------------------------------------
		      loXMLNodes =  .getElementsByTagName(MyValue5)
		      loNodeList =  .selectNodes(MyValue6)
		      loNodeAcc  =  .selectNodes(MyValue7)
		
		* Устанавливаем внутренний указатель на позицию перед первым узлом в наборе
		      loXMLNodes.Reset
		
		      loNodes = loXMLNodes.nextNode
		      With loNodes
		* ЗАГОЛОВОК
		        m_InfoTypeCode      = .getAttribute("InfoTypeCode")
		        m_EDAuthor          = .getAttribute("EDAuthor")
		        m_EDDate            = .getAttribute("EDDate")
		        m_EDNo              = .getAttribute("EDNo")
		
		*=MESSAGEBOX(m_EDDate)
		
		        Try
		          m_EDReceiver        = .getAttribute("EDReceiver")
		        Catch When .T.
		          m_EDReceiver        =' '
		        Endtry
		        Try
		          m_CreationReason    = .getAttribute("CreationReason")
		        Catch When .T.
		          m_CreationReason    =' '
		        Endtry
		        Try
		          m_CreationDateTime  = .getAttribute("CreationDateTime")
		        Catch When .T.
		          m_CreationDateTime  =' '
		        Endtry
		        Try
		          m_InfoTypeCode      = .getAttribute("InfoTypeCode")
		        Catch When .T.
		          m_InfoTypeCode      =' '
		        Endtry
		        Try
		          m_BusinessDay       = .getAttribute("BusinessDay")
		        Catch When .T.
		          m_BusinessDay       =' '
		        Endtry
		        Try
		          m_DirectoryVersion  = .getAttribute("DirectoryVersion")
		        Catch When .T.
		          m_DirectoryVersion  =' '
		        Endtry
		
		        Select 1
		*---------------- создание курсора a807 --- количество полей = 31 --------
		        Create Cursor a807 (BIC C(9),;
		          NameP C(160),;
		          Adr C(160),;
		          Tnp C(20),;
		          Nnp C(25),;
		          Ind C(6),;
		          Rgn C(2),;
		          UID C(10),;
		          Participan C(4),;
		          NPSPartici C(1),;
		          XchType C(1),;
		          Srvcs C(1),;
		          PtType C(2),;
		          DateIn C(10),;
		          PrntBIC C(9),;
		          DateOut C(10),;
		          PartNo C(6),;
		          PartQuanti C(6),;
		          PartAggreg C(27),;
		          EDNo C(9),;
		          EDDate C(10),;
		          EDAuthor C(10),;
		          ChangeType C(4),;
		          EnglName C(140),;
		          RegN C(9),;
		          CntrCd C(2),;
		          Rstr C(4),;
		          RstrDate C(10),;
		          SWBIC C(11),;
		          DefaultSWB C(1),;
		          ToNPSDate C(10))
		
		        al = Alias()
		        Select 2
		*-------------- создание курсора acc807 ----------- 9+1 полей -------------
		        Create Cursor acc807 (Account C(20), DateIn C(10), DateOut C(10),;
		          AccountSta C(4), AccountCBR C(9), CK C(2),;
		          RAccountT C(4), ARDat C(10), AccRs C(4), BIC C(9))
		
		        al2 = Alias()
		
		        Select a807 && (al)
		
		        m = 1
		        m_DateIn  = ''
		        m_DateOut = ''
		        m_RAccountType = ''
		
		        mBIC = ''
		        x = 1
		
		        For Each loNode In loNodeAcc  &&  ED807/BICDirectoryEntry/Accounts
		*ssa*			Wait 'Заполнение таблицы счетов (1/2)...  '+Str(x,10)+ ' из '+Alltrim(Str(loNodeAcc.Length,18)) Window Nowait
		          If x%100 = 0
		            Wait 'Заполнение таблицы счетов (1/2)...  '+Str(x,10)+ ' из '+Transform(loNodeAcc.Length) Window Nowait
		          Endif
		          Select acc807 && (al2)
		
		          With loNode
		            mBIC = .ParentNode.getAttribute("BIC")
		
		            m.Account               = .Attributes.getNamedItem("Account").Text
		            m_DateIn                = .Attributes.getNamedItem("DateIn").Text
		            m_DateOut               = Nvl(.getAttribute("DateOut"), '')
		            m_RAccountType          = .Attributes.getNamedItem("RegulationAccountType").Text
		            m.AccountStatus         = .Attributes.getNamedItem("AccountStatus").Text
		            m.AccountCBRBIC         = .Attributes.getNamedItem("AccountCBRBIC").Text
		            m.CK                    = Nvl(.getAttribute("CK"), '')
		
		            Append Blank
		            Replace Account With m.Account,;
		              DateIn With m_DateIn,;
		              AccountSta With m.AccountStatus,;
		              AccountCBR With m.AccountCBRBIC,;
		              CK With m.CK,;
		              RAccountT With m_RAccountType,;
		              DateOut With m_DateOut,;
		              BIC With mBIC
		
		            For j=0 To .ChildNodes.Length-1
		
		              For i=0 To 1 && LoNode.ChildNodes[j].Attributes.Length-1
		
		                If (.ChildNodes[j].Attributes.Item(i).Name='AccRstr') And (i<1)
		                  Replace AccRs With .ChildNodes[j].Attributes.Item(i).Text
		*             ? 'BIC= '+mBIC+' '+'AccRstr= '+AccRs
		                Endif
		
		                If (.ChildNodes[j].Attributes.Item(i).Name='AccRstrDate') And (i<=1)
		                  Replace ARDat With .ChildNodes[j].Attributes.Item(i).Text
		                Endif
		
		              Endfor
		            Endfor
		
		            Select a807 &&(al)
		
		            x=x+1
		          Endwith
		        Next  &&  ED807/BICDirectoryEntry/Accounts
		      Endwith
		      For Each loNode In loNodeList &&  loXML.selectNodes("ED807/BICDirectoryEntry")
		
		        With loNode
		          If m%100 = 0
		            Wait 'Заполнение таблицы БИК-ов (2/2)... '+Transform(m)+' из '+Transform(loNodeList.Length) Window Nowait
		          Endif
		          Select a807 &&(al)
		*ssa*				m.BIC = loNode.Attributes.getNamedItem("BIC").Text
		          m.BIC = .Attributes.getNamedItem("BIC").Text
		
		          Store '' To m.NameP, m.Adr, m.Tnp, m.Nnp, m.Ind, m.Rgn, m.UID, m.ParticipantStatus, m.NPSParticipant, m.XchType, ;
		            m.Srvcs, m.PtType, m.DateIn, m.PrntBIC, m.DateOut, m.PartNo, m.PartQuantity, m.PartAggregateID, m.EDNo, m.EDDate, ;
		            m.EDAuthor, m.ChangeType, m.EnglName, m.RegN, m.CntrCd, m.Rstr, m.RstrDate, m.SWBIC, m.DefaultSWBIC, m.ToNPSDate
		
		          For j=0 To loNode.ChildNodes.Length-1
		* здесь добавить для скорости, если имя тэга изменится !!! --->
		            If Inlist(.ChildNodes[j].NodeName, 'Accounts', 'ed:Accounts', 'AccRstrList', 'ed:AccRstrList')
		              Exit
		            Endif
		* <---  здесь добавить для скорости, если имя тэга изменится !!!
		
		            For i=0 To .ChildNodes[j].Attributes.Length-1
		              Select a807 && (al)
		
		              With .ChildNodes[j].Attributes.Item(i)
		                m.ParticipantStatus = Iif(.Name='ParticipantStatus', .Text, m.ParticipantStatus)
		                m.NPSParticipant = Iif(.Name='NPSParticipant', .Text, m.NPSParticipant)
		                m.UID = Iif(.Name='UID', .Text, m.UID)
		                m.XchType = Iif(.Name='XchType', .Text, m.XchType)
		                m.Srvcs = Iif(.Name='Srvcs', .Text, m.Srvcs)
		                m.PtType = Iif(.Name='PtType', .Text, m.PtType)
		                m.DateIn = Iif(.Name='DateIn', .Text, m.DateIn)
		                m.PrntBIC = Iif(.Name='PrntBIC', .Text, m.PrntBIC)
		                m.Adr = Iif(.Name='Adr', .Text, m.Adr)
		                m.Nnp = Iif(.Name='Nnp', .Text, m.Nnp)
		                m.Tnp = Iif(.Name='Tnp', .Text, m.Tnp)
		                m.Ind = Iif(.Name='Ind', .Text, m.Ind)
		                m.Rgn = Iif(.Name='Rgn', .Text, m.Rgn)
		                m.NameP = Iif(.Name='NameP', .Text, m.NameP)
		                m.DateOut = Iif(.Name='DateOut', .Text, m.DateOut)
		                m.PartNo = Iif(.Name='PartNo', .Text, m.PartNo)
		                m.PartQuantity = Iif(.Name='PartQuantity', .Text, m.PartQuantity)
		                m.PartAggregateID = Iif(.Name='PartAggregateID', .Text, m.PartAggregateID)
		                m.EDNo = Iif(.Name='EDNo', .Text, m.EDNo)
		                m.EDDate = Iif(.Name='EDDate', .Text, m.EDDate)
		                m.EDAuthor = Iif(.Name='EDAuthor', .Text, m.EDAuthor)
		                m.ChangeType = Iif(.Name='ChangeType', .Text, m.ChangeType)
		                m.EnglName = Iif(.Name='EnglName', .Text, m.EnglName)
		                m.RegN = Iif(.Name='RegN', .Text, m.RegN)
		                m.CntrCd = Iif(.Name='CntrCd', .Text, m.CntrCd)
		                m.Rstr = Iif(.Name='Rstr', .Text, m.Rstr)
		                m.RstrDate = Iif(.Name='RstrDate', .Text, m.RstrDate)
		                m.SWBIC = Iif(.Name='SWBIC', .Text, m.SWBIC)
		                m.DefaultSWBIC = Iif(.Name='DefaultSWBIC', .Text, m.DefaultSWBIC)
		                m.ToNPSDate = Iif(.Name='ToNPSDate', .Text, m.ToNPSDate)
		              Endwith
		            Endfor
		            Select acc807 && (al2)
		          Endfor
		        Endwith
		
		        Select a807 &&(al)
		        Append Blank
		* GATHER memvar
		        Replace BIC With m.BIC, NameP With m.NameP, Adr With m.Adr, Tnp With m.Tnp,;
		          Nnp With m.Nnp, Ind With m.Ind, Rgn With m.Rgn, UID With m.UID,;
		          Participan With m.ParticipantStatus, NPSPartici With m.NPSParticipant,;
		          XchType With m.XchType, Srvcs With m.Srvcs, PtType With m.PtType,;
		          DateIn With m.DateIn, PrntBIC With m.PrntBIC, DateOut With m.DateOut,;
		          PartNo With m.PartNo, PartQuanti With m.PartQuantity,;
		          PartAggreg With m.PartAggregateID, EDNo With m.EDNo,;
		          EDDate With m.EDDate, EDAuthor With m.EDAuthor, ChangeType With m.ChangeType,;
		          EnglName With m.EnglName, RegN With m.RegN, CntrCd With m.CntrCd,;
		          Rstr With m.Rstr, RstrDate With m.RstrDate, SWBIC With m.SWBIC,;
		          DefaultSWB With m.DefaultSWBIC, ToNPSDate With m.ToNPSDate
		*~~~~~~~~~~~~~~~~~~~~~
		
		        m=m+1
		      Next && конец цикла БИКов &&  loXML.selectNodes("ED807/BICDirectoryEntry")
		    Endwith
		    Select a807 && (al)
		    Release loXML
		
		  Endif && - загрузка XML из локальной папки Data
		
		  If .Optiongroup1.Value = 3  && открытие ранее сохраненных DBF
		*!*			If (!File(pathdata+'a807'+dat77+'.dbf')) Or (!File(pathdata+'acc807'+dat77+'.dbf')) Or (!File(pathdata+'h807'+dat77+'.dbf'))
		    If Not IsFileExists(.Text1.Value)
		      Messagebox('Нет DBF-таблиц ранее сохраненного справочника!'+Chr(13)+'Открытие невозможно!', 0+48, 'Открытие DBF СПРАВОЧНИКА БИК')
		      .Command2.Caption = 'Импорт'
		      .Optiongroup1.Value = 1
		      Return .F.
		    Endif
		
		    vq_tmp  = pathdata+'a807'+dat77+'.dbf'
		    vq_tmp2 = pathdata+'acc807'+dat77+'.dbf'
		    vq_tmp3 = pathdata+'h807'+dat77+'.dbf'
		
		    Close Tables
		
		    Use (vq_tmp) Alias a807 Exclusive
		    al = Alias()
		
		    Select 2
		    Use (vq_tmp2) Alias acc807 Exclusive
		    al2 = Alias()
		
		    Select 0
		    Use (vq_tmp3) Alias h807 Exclusive
		
		    m_EDNo              = EDNo
		    m_EDDate            = EDDate
		    m_EDAuthor          = EDAuthor
		    m_CreationReason    = CreationRe
		    m_CreationDateTime  = CreationDT
		    m_InfoTypeCode      = InfoTypeCo
		    m_EDReceiver        = Evl(EDReceiver, ' ')
		    m_BusinessDay       = Evl(BusinessDa, ' ')
		    m_DirectoryVersion  = Evl(DirectoryV, ' ')
		    Select (al)
		  Endif && - открытие ранее сохраненных DBF
		
		  Index On BIC Tag BIC
		  Index On NameP Tag NameP
		  Index On PtType Tag PtType
		  Index On Adr Tag Adr
		  Index On Ind Tag Ind
		  Index On Nnp Tag Nnp
		  Index On Rgn Tag Rgn
		  Index On UID Tag UID
		  Index On RegN Tag RegN
		  Index On SWBIC Tag SWBIC
		  Index On PrntBIC Tag PrntBIC
		
		  Set Order To Tag BIC
		  Select acc807 && (al2)
		  Index On Account+BIC Tag Account
		  Index On BIC Tag BIC
		  Select a807 && (al)
		  Set Relation To BIC Into acc807 Additive
		*SET SKIP TO ACC807
		
		*ThisForm.Command2.Enabled = .T.
		  .Command2.Caption = 'Импорт'
		
		  Do Form Form2 Name fr_2
		
		Endwith
		*CLOSE ALL
		*---------------------------------------------
		
	ENDPROC

	PROCEDURE Text1.Valid
		With Thisform
			.Command2.ForeColor = Iif(IsFileExists(.Text1.Value), Rgb(0,128,0), Rgb(255,128,0))
		Endwith
		
	ENDPROC

ENDDEFINE
